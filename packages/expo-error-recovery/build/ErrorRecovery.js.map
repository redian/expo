{"version":3,"file":"ErrorRecovery.js","sourceRoot":"","sources":["../src/ErrorRecovery.ts"],"names":[],"mappings":"AACA,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AAEpD,IAAI,oBAAoB,GAAkB,IAAI,CAAC;AAC/C,MAAM,aAAa,GAAG,UAAU,CAAC,gBAAgB,EAAE,CAAC;AACpD,oCAAoC;AACpC,iIAAiI;AACjI,UAAU,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE;IACnD,MAAM,iBAAiB,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;IAChE,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,cAAc,GAAG,kBAAkB,EAAE,CAAC;AAEnD,MAAM,UAAU,gBAAgB,CAAC,KAA6B;IAC5D,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/C,CAAC;AAED,SAAS,kBAAkB;IACzB,IAAI,iBAAiB,CAAC,cAAc,EAAE;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;KACrD;IACD,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nlet recoveredPropsToSave: String | null = null;\nconst globalHandler = ErrorUtils.getGlobalHandler();\n// ErrorUtils came from react-native\n// https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\nErrorUtils.setGlobalHandler(async (error, isFatal) => {\n  await ExpoErrorRecovery.saveRecoveryProps(recoveredPropsToSave);\n  globalHandler(error, isFatal);\n});\n\nexport const recoveredProps = _getRecoveredProps();\n\nexport function setRecoveryProps(props: { [key: string]: any }): void {\n  recoveredPropsToSave = JSON.stringify(props);\n}\n\nfunction _getRecoveredProps(): { [key: string]: any } | null {\n  if (ExpoErrorRecovery.recoveredProps) {\n    return JSON.parse(ExpoErrorRecovery.recoveredProps);\n  }\n  return null;\n}\n"]}